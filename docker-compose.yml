version: '3'

services:
  db:
    image: postgres:11.9-alpine
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - db
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  fusionauth:
    image: fusionauth/fusionauth-app:latest
    depends_on:
      - db
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: development
      FUSIONAUTH_APP_URL: "${FUSIONAUTH_APP_PROTOCOL}://${FUSIONAUTH_APP_HOST}:${FUSIONAUTH_APP_PORT}"

      SEARCH_TYPE: database

    networks:
      - db
      - auth
    restart: unless-stopped
    ports:
        - ${FUSIONAUTH_APP_PORT:-9011}:9011
    volumes:
      - fa_config:/usr/local/fusionauth/config

  web:
    depends_on:
      - fusionauth
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py run
    volumes:
      - .:/code
    ports:
        - ${DJANGO_PORT:-8000}:8000
    networks:
      - auth
    env_file:
      - .env
    environment:
        LOGIN_REDIRECT_URL: "${DJANGO_PROTOCOL}://${DJANGO_HOST}:${DJANGO_PORT}/dash"
        FUSION_AUTH_INTERNAL_API_URL: "${FUSION_AUTH_INTERNAL_API_PROTOCOL}://${FUSION_AUTH_INTERNAL_API_HOST}:${FUSION_AUTH_INTERNAL_API_PORT}"
        FUSION_AUTH_BASE_URL: "${FUSIONAUTH_APP_PROTOCOL}://${FUSIONAUTH_APP_HOST}:${FUSIONAUTH_APP_PORT}"
    #depends_on:
    #  - db
    restart: unless-stopped


networks:
  db:
    driver: bridge
  auth:
    driver: bridge

volumes:
  db_data:
  fa_config:
